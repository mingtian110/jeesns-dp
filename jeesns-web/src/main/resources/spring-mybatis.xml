<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.luntan.deppon"/>

    <!-- 引入配置信息 -->
	<!--<context:property-placeholder location="classpath:jeesns.properties"/>-->
    <bean id="noticeStatSeq" class="com.pamirs.pddl.client.sequence.impl.GroupSequence"
          init-method="init">
        <!-- sequence生成器名 -->
        <property name="name" value="tbl_notice"/> <!--序列表sequence中的name字段的名字-->
        <!-- sequence依赖的DataSource DAO -->
        <property name="sequenceDao" ref="sequenceDao"/>
    </bean>
    <!--sequence DAO-->
    <bean id="sequenceDao" class="com.pamirs.pddl.client.sequence.impl.GroupSequenceDao"
          init-method="init">
        <!-- appName，必填 -->
        <property name="appName" value="JEESNS"/>
        <!-- 数据源的个数，和dbGroupKeys的数量相同，如果大于dbGroupKeys的数量，可理解为预留"-OFF"的源，方便以后扩展 -->
        <property name="dscount" value="1"/>
        <!-- dbGroupKeys 必填 -->
        <!-- 如果在末尾插入"-OFF ",该源将被关掉，该源占据的SQL段会被保留" -->
        <!-- 当dbGroupKeys中配置的个数小于dscount的值的时候，默认配置了"-OFF"的源 -->
        <property name="dbGroupKeys">
            <list>
                <value>JEESNS_GROUP</value> <!--group名称-->
            </list>
        </property>
        <!-- 内步长 ,默认为1000，取值在1-100000之间 -->
        <property name="innerStep" value="1000"/>
        <!-- 是否开启自适应，默认是false -->
        <property name="adjust" value="true"/>
        <!-- 重试次数，在多个gourpDataSource的场景下，建议设置成1-2次。默认为2次 -->
        <property name="retryTimes" value="2"/>
        <!-- 使用的表的表名 ，默认为sequence -->
        <property name="tableName" value="sequence"/>
        <!-- id生成器的字段名,默认为name -->
        <property name="nameColumnName" value="name"/>
        <!-- 存值的列的字段名,默认为value -->
        <property name="valueColumnName" value="value"/>
        <!-- 存修改时间的字段名 ,默认为gmt_modified -->
        <property name="gmtModifiedColumnName" value="modify_date"/>
    </bean>
	<!-- 配置数据源 -->
	<!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
		<!--<property name="driverClass" value="${jdbc.driver}"></property>-->
		<!--<property name="jdbcUrl" value="${jdbc.url}"></property>-->
		<!--<property name="user" value="${jdbc.user}"></property>-->
		<!--<property name="password" value="${jdbc.password}"></property>-->
	<!--</bean>-->

    <!--<bean id="sqlCalcDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="com.deppon.cubc.console.dao.SqlCalcDAO"></property>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactoryCalc"></property>-->
    <!--</bean>-->
    <bean id="dataSource" class="com.pamirs.pddl.client.jdbc.TDataSource" init-method="init">
        <property name="appName" value="JEESNS"/>
        <property name="dynamicRule" value="true"/>
    </bean>
	<!-- 设置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描Mapper.xml -->
		<property name="mapperLocations" value="classpath*:mybatis/**/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.luntan.deppon.model"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.luntan.deppon.dao.*" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- 定义事务管理器 对mybatis操作数据库的控制，spring使用jdbc的事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
 
</beans>